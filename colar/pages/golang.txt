======Go / Golang======
<code>
package main

import "fmt"

func main() {
  fmt.Printf("Hello, world.\n")
}
</code>
=====First impression=====
When I first looked at Go(~2010), I was not all that excited for a few reasons:

  - At a quick glance it looks a bit "archaic" and very C-ish (syntax wise)
  - Limited syntactic sugar compare to say Groovy, Python or Scala.
  - After using Fantom for years it did not seem quite as "nice" and pragmatic.
  - Pointers ? Really ? Somebody thought it was a good idea to bring that back.

In fact that made me "ignore" it for a few years until I got back to it.

**Now that I have used as my primary language since June 2013  at [[rivet and sway|Rivet & Sway]], I can say it's one of the most
productive language I have used and one of the very best balance of productivity vs performance especially for a compiled language.**

I have got a lot to say about Go, so follow those links for more details:

  - [[Golang - My Favorite things]]

  - [[Golang - Gotchas and questionable items]]

=====Outlook=====
I think the outlook for Go is good.

  - It's starting to pick up steam lately.
  - Reminds me of Java back then : Built for enterprise & easy to learn.
  - Easy to learn and enforces good practices, encourages stable and maintainable code.
  - Open source & supported by Google.
  - Performance potential is fantastic.
  - Highly productive and built for  the future : GoRoutines etc....


